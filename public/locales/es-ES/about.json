{
	"about": {
		"intro1": "<p><strong>DollarBlacklist</strong> es un sistema de reputación de billetes en moneda <em>USD</em>, donde los usuarios pueden consultar billetes por su número de serial, valor y año de serie, y ver de inmediato un resumen de las revisiones que otros usuarios han hecho sobre el billete, y así determinar con la mayor seguridad posible la <strong>autenticidad</strong> del billete.</p>",
		"intro2": "<p>Además de proporcionar un resumen de las revisiones que han hecho otros usuarios, DollarBlacklist muestra las <strong>características de seguridad</strong> que debe tener el billete consultado, y cómo emplearlas para determinar si el billete es falso o verdadero.</p>",
		"users": "<h2>Tipos de usuario</h2><p>En cuanto a las cuentas de usuarios, hay dos tipos de usuario:</p><ul><li>Regular</li><li>Negocio o comercio</li></ul><p>La única diferencia entre ambos tipos de usuario es que las revisiones que hagan los <em>comercios</em> en general son más fiables que las que hagan los usuarios <em>regulares</em>.</p>",
		"reviews": "<h2>Revisiones</h2><p>Para las revisiones, hay dos tipos:</p><ul><li><h3>Buena: billete auténtico</h3><p>Los usuarios pueden dejar un comentario público (opcional) y deben especificar un número del 1 al 5, que se refiere al estado físico del billete.</p></li><li><h3>Mala: billete falso</h3><p>Los usuarios pueden dejar un comentario público (opcional) y deben especificar los defectos del billete que se consideran una falla en las características de seguridad.</p></li></ul>",
		"reviewsNotes": "<p><strong>Importante:</strong> para enviar una revision, los usuarios deben permitir a DollarBlacklist conocer su ubicación, ya que esta información es parte esencial de la revisión, y es utilizada para posicionar en un mapa la ciudad donde fue realizada la revisión.</p><p>Un usuario solo tiene permitido enviar una revisión de un tipo (buena o mala) de un mismo billete.</p>",
		"securityFeatures": "<h2>Sobre las características de seguridad</h2><p>Cada denominación de los billetes presenta diferentes características de seguridad, que varían dependiendo del año de serie.</p><p>Toda la información referente a las características de seguridad de los billetes de cada denominación de cada año de serie ha sido obtenida del sitio oficial de la <em>Moneda de los Estados Unidos</em>: <a href='https://www.uscurrency.gov'>www.uscurrency.gov</a></p>",
		"motivation": "<h1>Motivación</h1><p>Muchas personas no saben cómo detectar billetes falsos inspeccionando sus características de seguridad. El sitio web oficial de la moneda estadounidense las muestra todas en varios archivos PDF, pero esa no es la forma más práctica de conocer todas las características de seguridad de todas las denominaciones de todos los años de serie.</p><p>Ya existen detectores de billetes falsos, y aunque son infalibles, son una exageración para algo que las personas podrían hacer fácilmente simplemente analizando las características de seguridad. Fueron puestas en los billetes por una razón: para hacer que replicarlos sea muy difícil y costoso, y no todos pueden comprarse una de esas máquinas de funcionalidad muy específica, que además no son tan portátiles como los teléfonos inteligentes.</p>",
		"author": "<h1>Sobre el autor</h1><p><strong>Luis Villegas</strong> aprendió algoritmos y estructuras de datos con el lenguaje de programación C++ en la universidad en 2017. Desde entonces, no ha parado de aprender tecnologías y lenguajes de programación relacionados al desarrollo web, con muy buenas plataformas de cursos como <strong>W3Schools</strong> y <strong>FreeCodeCamp</strong>, donde aprendió <strong>HTML</strong>, <strong>CSS</strong> y <strong>JavaScript</strong> moderno con <strong>React y Redux</strong>. Rápidamente aprendió desarrollo web para ambos tipos de aplicaciones: server-side y client-side, con el lenguaje de programación Golang para el backend y React y Redux o Svelte para el frontend, o simplemente HTML, CSS y JS con HUGO para sitios estáticos.</p><p>Esta aplicacion es una demonstración de sus habilidades como desarrollador web. La API, hecha con Golang se ejecuta en una instancia de AWS EC2 y el frontend, que incluye i18n, está construido con React y Redux y está hospedado en Netlify.</p>",
		"contact": "<p>Luis está disponible para trabajar remotamente y puedes contactarlo por su email: luisguveal@gmail.com o su perfil de LinkedIn: <a href='https://linkedin.com/in/luisg-villegas' rel='noreferrer' target='_blank'>https://linkedin.com/in/luisg-villegas</a></p>"
	}
}